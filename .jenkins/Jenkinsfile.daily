pipeline {
    agent none
    options {
        parallelsAlwaysFailFast()
    }
    stages {
        stage("dunfell") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
                        }
                        steps {
                            sh """#!/bin/bash
                               TEMPLATECONF=${env.WORKSPACE}/build-templates source ${env.WORKSPACE}/poky/oe-init-build-env
                               devtool show MACHINE
                               devtool cache autoconf-native -fm
                               bitbake-layers status
                               bitbake-layers inspect meta
                               bitbake-layers test-layers --add
                               bitbake-layers test-recipes
                               recipetool check core-image-minimal
                               recipetool inspect core-image-minimal
                               bitbake core-image-minimal
                               bitbake core-image-minimal -c checkcodeall
                               bitbake core-image-minimal -c testall
                               bitbake core-image-minimal -c coverageall
                               """
                        }
                    }
                }
                post {
                    always {
                        cleanWs disableDeferredWipeout: true
                    }
                }
            }  // matrix
        }  // stage
    }  // stages
}  // pipeline
